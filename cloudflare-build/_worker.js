var Ft=Object.defineProperty;var Je=e=>{throw TypeError(e)};var Nt=(e,t,r)=>t in e?Ft(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r;var y=(e,t,r)=>Nt(e,typeof t!="symbol"?t+"":t,r),ke=(e,t,r)=>t.has(e)||Je("Cannot "+r);var d=(e,t,r)=>(ke(e,t,"read from private field"),r?r.call(e):t.get(e)),g=(e,t,r)=>t.has(e)?Je("Cannot add the same private member more than once"):t instanceof WeakSet?t.add(e):t.set(e,r),h=(e,t,r,s)=>(ke(e,t,"write to private field"),s?s.call(e,r):t.set(e,r),r),b=(e,t,r)=>(ke(e,t,"access private method"),r);var Ye=(e,t,r,s)=>({set _(n){h(e,t,n,r)},get _(){return d(e,t,s)}});var Qe=(e,t,r)=>(s,n)=>{let a=-1;return o(0);async function o(c){if(c<=a)throw new Error("next() called multiple times");a=c;let i,l=!1,u;if(e[c]?(u=e[c][0][0],s.req.routeIndex=c):u=c===e.length&&n||void 0,u)try{i=await u(s,()=>o(c+1))}catch(_){if(_ instanceof Error&&t)s.error=_,i=await t(_,s),l=!0;else throw _}else s.finalized===!1&&r&&(i=await r(s));return i&&(s.finalized===!1||l)&&(s.res=i),s}},qt=Symbol(),It=async(e,t=Object.create(null))=>{const{all:r=!1,dot:s=!1}=t,a=(e instanceof Et?e.raw.headers:e.headers).get("Content-Type");return a!=null&&a.startsWith("multipart/form-data")||a!=null&&a.startsWith("application/x-www-form-urlencoded")?Pt(e,{all:r,dot:s}):{}};async function Pt(e,t){const r=await e.formData();return r?Ht(r,t):{}}function Ht(e,t){const r=Object.create(null);return e.forEach((s,n)=>{t.all||n.endsWith("[]")?Bt(r,n,s):r[n]=s}),t.dot&&Object.entries(r).forEach(([s,n])=>{s.includes(".")&&(Ut(r,s,n),delete r[s])}),r}var Bt=(e,t,r)=>{e[t]!==void 0?Array.isArray(e[t])?e[t].push(r):e[t]=[e[t],r]:t.endsWith("[]")?e[t]=[r]:e[t]=r},Ut=(e,t,r)=>{let s=e;const n=t.split(".");n.forEach((a,o)=>{o===n.length-1?s[a]=r:((!s[a]||typeof s[a]!="object"||Array.isArray(s[a])||s[a]instanceof File)&&(s[a]=Object.create(null)),s=s[a])})},pt=e=>{const t=e.split("/");return t[0]===""&&t.shift(),t},Wt=e=>{const{groups:t,path:r}=kt(e),s=pt(r);return $t(s,t)},kt=e=>{const t=[];return e=e.replace(/\{[^}]+\}/g,(r,s)=>{const n=`@${s}`;return t.push([n,r]),n}),{groups:t,path:e}},$t=(e,t)=>{for(let r=t.length-1;r>=0;r--){const[s]=t[r];for(let n=e.length-1;n>=0;n--)if(e[n].includes(s)){e[n]=e[n].replace(s,t[r][1]);break}}return e},Ne={},Vt=(e,t)=>{if(e==="*")return"*";const r=e.match(/^\:([^\{\}]+)(?:\{(.+)\})?$/);if(r){const s=`${e}#${t}`;return Ne[s]||(r[2]?Ne[s]=t&&t[0]!==":"&&t[0]!=="*"?[s,r[1],new RegExp(`^${r[2]}(?=/${t})`)]:[e,r[1],new RegExp(`^${r[2]}$`)]:Ne[s]=[e,r[1],!0]),Ne[s]}return null},Ke=(e,t)=>{try{return t(e)}catch{return e.replace(/(?:%[0-9A-Fa-f]{2})+/g,r=>{try{return t(r)}catch{return r}})}},zt=e=>Ke(e,decodeURI),_t=e=>{const t=e.url,r=t.indexOf("/",t.indexOf(":")+4);let s=r;for(;s<t.length;s++){const n=t.charCodeAt(s);if(n===37){const a=t.indexOf("?",s),o=t.slice(r,a===-1?void 0:a);return zt(o.includes("%25")?o.replace(/%25/g,"%2525"):o)}else if(n===63)break}return t.slice(r,s)},Xt=e=>{const t=_t(e);return t.length>1&&t.at(-1)==="/"?t.slice(0,-1):t},Ee=(e,t,...r)=>(r.length&&(t=Ee(t,...r)),`${(e==null?void 0:e[0])==="/"?"":"/"}${e}${t==="/"?"":`${(e==null?void 0:e.at(-1))==="/"?"":"/"}${(t==null?void 0:t[0])==="/"?t.slice(1):t}`}`),mt=e=>{if(e.charCodeAt(e.length-1)!==63||!e.includes(":"))return null;const t=e.split("/"),r=[];let s="";return t.forEach(n=>{if(n!==""&&!/\:/.test(n))s+="/"+n;else if(/\:/.test(n))if(/\?/.test(n)){r.length===0&&s===""?r.push("/"):r.push(s);const a=n.replace("?","");s+="/"+a,r.push(s)}else s+="/"+n}),r.filter((n,a,o)=>o.indexOf(n)===a)},$e=e=>/[%+]/.test(e)?(e.indexOf("+")!==-1&&(e=e.replace(/\+/g," ")),e.indexOf("%")!==-1?Ke(e,ht):e):e,ft=(e,t,r)=>{let s;if(!r&&t&&!/[%+]/.test(t)){let o=e.indexOf(`?${t}`,8);for(o===-1&&(o=e.indexOf(`&${t}`,8));o!==-1;){const c=e.charCodeAt(o+t.length+1);if(c===61){const i=o+t.length+2,l=e.indexOf("&",i);return $e(e.slice(i,l===-1?void 0:l))}else if(c==38||isNaN(c))return"";o=e.indexOf(`&${t}`,o+1)}if(s=/[%+]/.test(e),!s)return}const n={};s??(s=/[%+]/.test(e));let a=e.indexOf("?",8);for(;a!==-1;){const o=e.indexOf("&",a+1);let c=e.indexOf("=",a);c>o&&o!==-1&&(c=-1);let i=e.slice(a+1,c===-1?o===-1?void 0:o:c);if(s&&(i=$e(i)),a=o,i==="")continue;let l;c===-1?l="":(l=e.slice(c+1,o===-1?void 0:o),s&&(l=$e(l))),r?(n[i]&&Array.isArray(n[i])||(n[i]=[]),n[i].push(l)):n[i]??(n[i]=l)}return t?n[t]:n},Kt=ft,Gt=(e,t)=>ft(e,t,!0),ht=decodeURIComponent,Ze=e=>Ke(e,ht),je,q,G,yt,gt,ze,Z,st,Et=(st=class{constructor(e,t="/",r=[[]]){g(this,G);y(this,"raw");g(this,je);g(this,q);y(this,"routeIndex",0);y(this,"path");y(this,"bodyCache",{});g(this,Z,e=>{const{bodyCache:t,raw:r}=this,s=t[e];if(s)return s;const n=Object.keys(t)[0];return n?t[n].then(a=>(n==="json"&&(a=JSON.stringify(a)),new Response(a)[e]())):t[e]=r[e]()});this.raw=e,this.path=t,h(this,q,r),h(this,je,{})}param(e){return e?b(this,G,yt).call(this,e):b(this,G,gt).call(this)}query(e){return Kt(this.url,e)}queries(e){return Gt(this.url,e)}header(e){if(e)return this.raw.headers.get(e)??void 0;const t={};return this.raw.headers.forEach((r,s)=>{t[s]=r}),t}async parseBody(e){var t;return(t=this.bodyCache).parsedBody??(t.parsedBody=await It(this,e))}json(){return d(this,Z).call(this,"text").then(e=>JSON.parse(e))}text(){return d(this,Z).call(this,"text")}arrayBuffer(){return d(this,Z).call(this,"arrayBuffer")}blob(){return d(this,Z).call(this,"blob")}formData(){return d(this,Z).call(this,"formData")}addValidatedData(e,t){d(this,je)[e]=t}valid(e){return d(this,je)[e]}get url(){return this.raw.url}get method(){return this.raw.method}get[qt](){return d(this,q)}get matchedRoutes(){return d(this,q)[0].map(([[,e]])=>e)}get routePath(){return d(this,q)[0].map(([[,e]])=>e)[this.routeIndex].path}},je=new WeakMap,q=new WeakMap,G=new WeakSet,yt=function(e){const t=d(this,q)[0][this.routeIndex][1][e],r=b(this,G,ze).call(this,t);return r&&/\%/.test(r)?Ze(r):r},gt=function(){const e={},t=Object.keys(d(this,q)[0][this.routeIndex][1]);for(const r of t){const s=b(this,G,ze).call(this,d(this,q)[0][this.routeIndex][1][r]);s!==void 0&&(e[r]=/\%/.test(s)?Ze(s):s)}return e},ze=function(e){return d(this,q)[1]?d(this,q)[1][e]:e},Z=new WeakMap,st),Jt={Stringify:1},jt=async(e,t,r,s,n)=>{typeof e=="object"&&!(e instanceof String)&&(e instanceof Promise||(e=e.toString()),e instanceof Promise&&(e=await e));const a=e.callbacks;return a!=null&&a.length?(n?n[0]+=e:n=[e],Promise.all(a.map(c=>c({phase:t,buffer:n,context:s}))).then(c=>Promise.all(c.filter(Boolean).map(i=>jt(i,t,!1,s,n))).then(()=>n[0]))):Promise.resolve(e)},Yt="text/plain; charset=UTF-8",Ve=(e,t)=>({"Content-Type":e,...t}),Oe,De,V,ve,z,L,xe,we,Re,le,Ae,Le,ee,ye,nt,Qt=(nt=class{constructor(e,t){g(this,ee);g(this,Oe);g(this,De);y(this,"env",{});g(this,V);y(this,"finalized",!1);y(this,"error");g(this,ve);g(this,z);g(this,L);g(this,xe);g(this,we);g(this,Re);g(this,le);g(this,Ae);g(this,Le);y(this,"render",(...e)=>(d(this,we)??h(this,we,t=>this.html(t)),d(this,we).call(this,...e)));y(this,"setLayout",e=>h(this,xe,e));y(this,"getLayout",()=>d(this,xe));y(this,"setRenderer",e=>{h(this,we,e)});y(this,"header",(e,t,r)=>{this.finalized&&h(this,L,new Response(d(this,L).body,d(this,L)));const s=d(this,L)?d(this,L).headers:d(this,le)??h(this,le,new Headers);t===void 0?s.delete(e):r!=null&&r.append?s.append(e,t):s.set(e,t)});y(this,"status",e=>{h(this,ve,e)});y(this,"set",(e,t)=>{d(this,V)??h(this,V,new Map),d(this,V).set(e,t)});y(this,"get",e=>d(this,V)?d(this,V).get(e):void 0);y(this,"newResponse",(...e)=>b(this,ee,ye).call(this,...e));y(this,"body",(e,t,r)=>b(this,ee,ye).call(this,e,t,r));y(this,"text",(e,t,r)=>!d(this,le)&&!d(this,ve)&&!t&&!r&&!this.finalized?new Response(e):b(this,ee,ye).call(this,e,t,Ve(Yt,r)));y(this,"json",(e,t,r)=>b(this,ee,ye).call(this,JSON.stringify(e),t,Ve("application/json",r)));y(this,"html",(e,t,r)=>{const s=n=>b(this,ee,ye).call(this,n,t,Ve("text/html; charset=UTF-8",r));return typeof e=="object"?jt(e,Jt.Stringify,!1,{}).then(s):s(e)});y(this,"redirect",(e,t)=>{const r=String(e);return this.header("Location",/[^\x00-\xFF]/.test(r)?encodeURI(r):r),this.newResponse(null,t??302)});y(this,"notFound",()=>(d(this,Re)??h(this,Re,()=>new Response),d(this,Re).call(this,this)));h(this,Oe,e),t&&(h(this,z,t.executionCtx),this.env=t.env,h(this,Re,t.notFoundHandler),h(this,Le,t.path),h(this,Ae,t.matchResult))}get req(){return d(this,De)??h(this,De,new Et(d(this,Oe),d(this,Le),d(this,Ae))),d(this,De)}get event(){if(d(this,z)&&"respondWith"in d(this,z))return d(this,z);throw Error("This context has no FetchEvent")}get executionCtx(){if(d(this,z))return d(this,z);throw Error("This context has no ExecutionContext")}get res(){return d(this,L)||h(this,L,new Response(null,{headers:d(this,le)??h(this,le,new Headers)}))}set res(e){if(d(this,L)&&e){e=new Response(e.body,e);for(const[t,r]of d(this,L).headers.entries())if(t!=="content-type")if(t==="set-cookie"){const s=d(this,L).headers.getSetCookie();e.headers.delete("set-cookie");for(const n of s)e.headers.append("set-cookie",n)}else e.headers.set(t,r)}h(this,L,e),this.finalized=!0}get var(){return d(this,V)?Object.fromEntries(d(this,V)):{}}},Oe=new WeakMap,De=new WeakMap,V=new WeakMap,ve=new WeakMap,z=new WeakMap,L=new WeakMap,xe=new WeakMap,we=new WeakMap,Re=new WeakMap,le=new WeakMap,Ae=new WeakMap,Le=new WeakMap,ee=new WeakSet,ye=function(e,t,r){const s=d(this,L)?new Headers(d(this,L).headers):d(this,le)??new Headers;if(typeof t=="object"&&"headers"in t){const a=t.headers instanceof Headers?t.headers:new Headers(t.headers);for(const[o,c]of a)o.toLowerCase()==="set-cookie"?s.append(o,c):s.set(o,c)}if(r)for(const[a,o]of Object.entries(r))if(typeof o=="string")s.set(a,o);else{s.delete(a);for(const c of o)s.append(a,c)}const n=typeof t=="number"?t:(t==null?void 0:t.status)??d(this,ve);return new Response(e,{status:n,headers:s})},nt),C="ALL",Zt="all",er=["get","post","put","delete","options","patch"],vt="Can not add a route since the matcher is already built.",wt=class extends Error{},tr="__COMPOSED_HANDLER",rr=e=>e.text("404 Not Found",404),et=(e,t)=>{if("getResponse"in e){const r=e.getResponse();return t.newResponse(r.body,r)}return console.error(e),t.text("Internal Server Error",500)},P,S,bt,H,ie,qe,Ie,at,Rt=(at=class{constructor(t={}){g(this,S);y(this,"get");y(this,"post");y(this,"put");y(this,"delete");y(this,"options");y(this,"patch");y(this,"all");y(this,"on");y(this,"use");y(this,"router");y(this,"getPath");y(this,"_basePath","/");g(this,P,"/");y(this,"routes",[]);g(this,H,rr);y(this,"errorHandler",et);y(this,"onError",t=>(this.errorHandler=t,this));y(this,"notFound",t=>(h(this,H,t),this));y(this,"fetch",(t,...r)=>b(this,S,Ie).call(this,t,r[1],r[0],t.method));y(this,"request",(t,r,s,n)=>t instanceof Request?this.fetch(r?new Request(t,r):t,s,n):(t=t.toString(),this.fetch(new Request(/^https?:\/\//.test(t)?t:`http://localhost${Ee("/",t)}`,r),s,n)));y(this,"fire",()=>{addEventListener("fetch",t=>{t.respondWith(b(this,S,Ie).call(this,t.request,t,void 0,t.request.method))})});[...er,Zt].forEach(a=>{this[a]=(o,...c)=>(typeof o=="string"?h(this,P,o):b(this,S,ie).call(this,a,d(this,P),o),c.forEach(i=>{b(this,S,ie).call(this,a,d(this,P),i)}),this)}),this.on=(a,o,...c)=>{for(const i of[o].flat()){h(this,P,i);for(const l of[a].flat())c.map(u=>{b(this,S,ie).call(this,l.toUpperCase(),d(this,P),u)})}return this},this.use=(a,...o)=>(typeof a=="string"?h(this,P,a):(h(this,P,"*"),o.unshift(a)),o.forEach(c=>{b(this,S,ie).call(this,C,d(this,P),c)}),this);const{strict:s,...n}=t;Object.assign(this,n),this.getPath=s??!0?t.getPath??_t:Xt}route(t,r){const s=this.basePath(t);return r.routes.map(n=>{var o;let a;r.errorHandler===et?a=n.handler:(a=async(c,i)=>(await Qe([],r.errorHandler)(c,()=>n.handler(c,i))).res,a[tr]=n.handler),b(o=s,S,ie).call(o,n.method,n.path,a)}),this}basePath(t){const r=b(this,S,bt).call(this);return r._basePath=Ee(this._basePath,t),r}mount(t,r,s){let n,a;s&&(typeof s=="function"?a=s:(a=s.optionHandler,s.replaceRequest===!1?n=i=>i:n=s.replaceRequest));const o=a?i=>{const l=a(i);return Array.isArray(l)?l:[l]}:i=>{let l;try{l=i.executionCtx}catch{}return[i.env,l]};n||(n=(()=>{const i=Ee(this._basePath,t),l=i==="/"?0:i.length;return u=>{const _=new URL(u.url);return _.pathname=_.pathname.slice(l)||"/",new Request(_,u)}})());const c=async(i,l)=>{const u=await r(n(i.req.raw),...o(i));if(u)return u;await l()};return b(this,S,ie).call(this,C,Ee(t,"*"),c),this}},P=new WeakMap,S=new WeakSet,bt=function(){const t=new Rt({router:this.router,getPath:this.getPath});return t.errorHandler=this.errorHandler,h(t,H,d(this,H)),t.routes=this.routes,t},H=new WeakMap,ie=function(t,r,s){t=t.toUpperCase(),r=Ee(this._basePath,r);const n={basePath:this._basePath,path:r,method:t,handler:s};this.router.add(t,r,[s,n]),this.routes.push(n)},qe=function(t,r){if(t instanceof Error)return this.errorHandler(t,r);throw t},Ie=function(t,r,s,n){if(n==="HEAD")return(async()=>new Response(null,await b(this,S,Ie).call(this,t,r,s,"GET")))();const a=this.getPath(t,{env:s}),o=this.router.match(n,a),c=new Qt(t,{path:a,matchResult:o,env:s,executionCtx:r,notFoundHandler:d(this,H)});if(o[0].length===1){let l;try{l=o[0][0][0][0](c,async()=>{c.res=await d(this,H).call(this,c)})}catch(u){return b(this,S,qe).call(this,u,c)}return l instanceof Promise?l.then(u=>u||(c.finalized?c.res:d(this,H).call(this,c))).catch(u=>b(this,S,qe).call(this,u,c)):l??d(this,H).call(this,c)}const i=Qe(o[0],this.errorHandler,d(this,H));return(async()=>{try{const l=await i(c);if(!l.finalized)throw new Error("Context is not finalized. Did you forget to return a Response object or `await next()`?");return l.res}catch(l){return b(this,S,qe).call(this,l,c)}})()},at),Tt=[];function sr(e,t){const r=this.buildAllMatchers(),s=(n,a)=>{const o=r[n]||r[C],c=o[2][a];if(c)return c;const i=a.match(o[0]);if(!i)return[[],Tt];const l=i.indexOf("",1);return[o[1][l],i]};return this.match=s,s(e,t)}var He="[^/]+",Ce=".*",Se="(?:|/.*)",ge=Symbol(),nr=new Set(".\\+*[^]$()");function ar(e,t){return e.length===1?t.length===1?e<t?-1:1:-1:t.length===1||e===Ce||e===Se?1:t===Ce||t===Se?-1:e===He?1:t===He?-1:e.length===t.length?e<t?-1:1:t.length-e.length}var de,ue,B,ot,Xe=(ot=class{constructor(){g(this,de);g(this,ue);g(this,B,Object.create(null))}insert(t,r,s,n,a){if(t.length===0){if(d(this,de)!==void 0)throw ge;if(a)return;h(this,de,r);return}const[o,...c]=t,i=o==="*"?c.length===0?["","",Ce]:["","",He]:o==="/*"?["","",Se]:o.match(/^\:([^\{\}]+)(?:\{(.+)\})?$/);let l;if(i){const u=i[1];let _=i[2]||He;if(u&&i[2]&&(_===".*"||(_=_.replace(/^\((?!\?:)(?=[^)]+\)$)/,"(?:"),/\((?!\?:)/.test(_))))throw ge;if(l=d(this,B)[_],!l){if(Object.keys(d(this,B)).some(m=>m!==Ce&&m!==Se))throw ge;if(a)return;l=d(this,B)[_]=new Xe,u!==""&&h(l,ue,n.varIndex++)}!a&&u!==""&&s.push([u,d(l,ue)])}else if(l=d(this,B)[o],!l){if(Object.keys(d(this,B)).some(u=>u.length>1&&u!==Ce&&u!==Se))throw ge;if(a)return;l=d(this,B)[o]=new Xe}l.insert(c,r,s,n,a)}buildRegExpStr(){const r=Object.keys(d(this,B)).sort(ar).map(s=>{const n=d(this,B)[s];return(typeof d(n,ue)=="number"?`(${s})@${d(n,ue)}`:nr.has(s)?`\\${s}`:s)+n.buildRegExpStr()});return typeof d(this,de)=="number"&&r.unshift(`#${d(this,de)}`),r.length===0?"":r.length===1?r[0]:"(?:"+r.join("|")+")"}},de=new WeakMap,ue=new WeakMap,B=new WeakMap,ot),Be,Me,it,or=(it=class{constructor(){g(this,Be,{varIndex:0});g(this,Me,new Xe)}insert(e,t,r){const s=[],n=[];for(let o=0;;){let c=!1;if(e=e.replace(/\{[^}]+\}/g,i=>{const l=`@\\${o}`;return n[o]=[l,i],o++,c=!0,l}),!c)break}const a=e.match(/(?::[^\/]+)|(?:\/\*$)|./g)||[];for(let o=n.length-1;o>=0;o--){const[c]=n[o];for(let i=a.length-1;i>=0;i--)if(a[i].indexOf(c)!==-1){a[i]=a[i].replace(c,n[o][1]);break}}return d(this,Me).insert(a,t,s,d(this,Be),r),s}buildRegExp(){let e=d(this,Me).buildRegExpStr();if(e==="")return[/^$/,[],[]];let t=0;const r=[],s=[];return e=e.replace(/#(\d+)|@(\d+)|\.\*\$/g,(n,a,o)=>a!==void 0?(r[++t]=Number(a),"$()"):(o!==void 0&&(s[Number(o)]=++t),"")),[new RegExp(`^${e}`),r,s]}},Be=new WeakMap,Me=new WeakMap,it),ir=[/^$/,[],Object.create(null)],Pe=Object.create(null);function Ct(e){return Pe[e]??(Pe[e]=new RegExp(e==="*"?"":`^${e.replace(/\/\*$|([.\\+*[^\]$()])/g,(t,r)=>r?`\\${r}`:"(?:|/.*)")}$`))}function cr(){Pe=Object.create(null)}function lr(e){var l;const t=new or,r=[];if(e.length===0)return ir;const s=e.map(u=>[!/\*|\/:/.test(u[0]),...u]).sort(([u,_],[m,j])=>u?1:m?-1:_.length-j.length),n=Object.create(null);for(let u=0,_=-1,m=s.length;u<m;u++){const[j,R,f]=s[u];j?n[R]=[f.map(([w])=>[w,Object.create(null)]),Tt]:_++;let E;try{E=t.insert(R,_,j)}catch(w){throw w===ge?new wt(R):w}j||(r[_]=f.map(([w,p])=>{const O=Object.create(null);for(p-=1;p>=0;p--){const[T,F]=E[p];O[T]=F}return[w,O]}))}const[a,o,c]=t.buildRegExp();for(let u=0,_=r.length;u<_;u++)for(let m=0,j=r[u].length;m<j;m++){const R=(l=r[u][m])==null?void 0:l[1];if(!R)continue;const f=Object.keys(R);for(let E=0,w=f.length;E<w;E++)R[f[E]]=c[R[f[E]]]}const i=[];for(const u in o)i[u]=r[o[u]];return[a,i,n]}function he(e,t){if(e){for(const r of Object.keys(e).sort((s,n)=>n.length-s.length))if(Ct(r).test(t))return[...e[r]]}}var te,re,Ue,St,ct,dr=(ct=class{constructor(){g(this,Ue);y(this,"name","RegExpRouter");g(this,te);g(this,re);y(this,"match",sr);h(this,te,{[C]:Object.create(null)}),h(this,re,{[C]:Object.create(null)})}add(e,t,r){var c;const s=d(this,te),n=d(this,re);if(!s||!n)throw new Error(vt);s[e]||[s,n].forEach(i=>{i[e]=Object.create(null),Object.keys(i[C]).forEach(l=>{i[e][l]=[...i[C][l]]})}),t==="/*"&&(t="*");const a=(t.match(/\/:/g)||[]).length;if(/\*$/.test(t)){const i=Ct(t);e===C?Object.keys(s).forEach(l=>{var u;(u=s[l])[t]||(u[t]=he(s[l],t)||he(s[C],t)||[])}):(c=s[e])[t]||(c[t]=he(s[e],t)||he(s[C],t)||[]),Object.keys(s).forEach(l=>{(e===C||e===l)&&Object.keys(s[l]).forEach(u=>{i.test(u)&&s[l][u].push([r,a])})}),Object.keys(n).forEach(l=>{(e===C||e===l)&&Object.keys(n[l]).forEach(u=>i.test(u)&&n[l][u].push([r,a]))});return}const o=mt(t)||[t];for(let i=0,l=o.length;i<l;i++){const u=o[i];Object.keys(n).forEach(_=>{var m;(e===C||e===_)&&((m=n[_])[u]||(m[u]=[...he(s[_],u)||he(s[C],u)||[]]),n[_][u].push([r,a-l+i+1]))})}}buildAllMatchers(){const e=Object.create(null);return Object.keys(d(this,re)).concat(Object.keys(d(this,te))).forEach(t=>{e[t]||(e[t]=b(this,Ue,St).call(this,t))}),h(this,te,h(this,re,void 0)),cr(),e}},te=new WeakMap,re=new WeakMap,Ue=new WeakSet,St=function(e){const t=[];let r=e===C;return[d(this,te),d(this,re)].forEach(s=>{const n=s[e]?Object.keys(s[e]).map(a=>[a,s[e][a]]):[];n.length!==0?(r||(r=!0),t.push(...n)):e!==C&&t.push(...Object.keys(s[C]).map(a=>[a,s[C][a]]))}),r?lr(t):null},ct),se,X,lt,ur=(lt=class{constructor(e){y(this,"name","SmartRouter");g(this,se,[]);g(this,X,[]);h(this,se,e.routers)}add(e,t,r){if(!d(this,X))throw new Error(vt);d(this,X).push([e,t,r])}match(e,t){if(!d(this,X))throw new Error("Fatal error");const r=d(this,se),s=d(this,X),n=r.length;let a=0,o;for(;a<n;a++){const c=r[a];try{for(let i=0,l=s.length;i<l;i++)c.add(...s[i]);o=c.match(e,t)}catch(i){if(i instanceof wt)continue;throw i}this.match=c.match.bind(c),h(this,se,[c]),h(this,X,void 0);break}if(a===n)throw new Error("Fatal error");return this.name=`SmartRouter + ${this.activeRouter.name}`,o}get activeRouter(){if(d(this,X)||d(this,se).length!==1)throw new Error("No active router has been determined yet.");return d(this,se)[0]}},se=new WeakMap,X=new WeakMap,lt),Te=Object.create(null),ne,x,pe,be,D,K,ce,dt,Ot=(dt=class{constructor(e,t,r){g(this,K);g(this,ne);g(this,x);g(this,pe);g(this,be,0);g(this,D,Te);if(h(this,x,r||Object.create(null)),h(this,ne,[]),e&&t){const s=Object.create(null);s[e]={handler:t,possibleKeys:[],score:0},h(this,ne,[s])}h(this,pe,[])}insert(e,t,r){h(this,be,++Ye(this,be)._);let s=this;const n=Wt(t),a=[];for(let o=0,c=n.length;o<c;o++){const i=n[o],l=n[o+1],u=Vt(i,l),_=Array.isArray(u)?u[0]:i;if(_ in d(s,x)){s=d(s,x)[_],u&&a.push(u[1]);continue}d(s,x)[_]=new Ot,u&&(d(s,pe).push(u),a.push(u[1])),s=d(s,x)[_]}return d(s,ne).push({[e]:{handler:r,possibleKeys:a.filter((o,c,i)=>i.indexOf(o)===c),score:d(this,be)}}),s}search(e,t){var c;const r=[];h(this,D,Te);let n=[this];const a=pt(t),o=[];for(let i=0,l=a.length;i<l;i++){const u=a[i],_=i===l-1,m=[];for(let j=0,R=n.length;j<R;j++){const f=n[j],E=d(f,x)[u];E&&(h(E,D,d(f,D)),_?(d(E,x)["*"]&&r.push(...b(this,K,ce).call(this,d(E,x)["*"],e,d(f,D))),r.push(...b(this,K,ce).call(this,E,e,d(f,D)))):m.push(E));for(let w=0,p=d(f,pe).length;w<p;w++){const O=d(f,pe)[w],T=d(f,D)===Te?{}:{...d(f,D)};if(O==="*"){const Q=d(f,x)["*"];Q&&(r.push(...b(this,K,ce).call(this,Q,e,d(f,D))),h(Q,D,T),m.push(Q));continue}const[F,k,N]=O;if(!u&&!(N instanceof RegExp))continue;const I=d(f,x)[F],Mt=a.slice(i).join("/");if(N instanceof RegExp){const Q=N.exec(Mt);if(Q){if(T[k]=Q[0],r.push(...b(this,K,ce).call(this,I,e,d(f,D),T)),Object.keys(d(I,x)).length){h(I,D,T);const We=((c=Q[0].match(/\//))==null?void 0:c.length)??0;(o[We]||(o[We]=[])).push(I)}continue}}(N===!0||N.test(u))&&(T[k]=u,_?(r.push(...b(this,K,ce).call(this,I,e,T,d(f,D))),d(I,x)["*"]&&r.push(...b(this,K,ce).call(this,d(I,x)["*"],e,T,d(f,D)))):(h(I,D,T),m.push(I)))}}n=m.concat(o.shift()??[])}return r.length>1&&r.sort((i,l)=>i.score-l.score),[r.map(({handler:i,params:l})=>[i,l])]}},ne=new WeakMap,x=new WeakMap,pe=new WeakMap,be=new WeakMap,D=new WeakMap,K=new WeakSet,ce=function(e,t,r,s){const n=[];for(let a=0,o=d(e,ne).length;a<o;a++){const c=d(e,ne)[a],i=c[t]||c[C],l={};if(i!==void 0&&(i.params=Object.create(null),n.push(i),r!==Te||s&&s!==Te))for(let u=0,_=i.possibleKeys.length;u<_;u++){const m=i.possibleKeys[u],j=l[i.score];i.params[m]=s!=null&&s[m]&&!j?s[m]:r[m]??(s==null?void 0:s[m]),l[i.score]=!0}}return n},dt),_e,ut,pr=(ut=class{constructor(){y(this,"name","TrieRouter");g(this,_e);h(this,_e,new Ot)}add(e,t,r){const s=mt(t);if(s){for(let n=0,a=s.length;n<a;n++)d(this,_e).insert(e,s[n],r);return}d(this,_e).insert(e,t,r)}match(e,t){return d(this,_e).search(e,t)}},_e=new WeakMap,ut),U=class extends Rt{constructor(e={}){super(e),this.router=e.router??new ur({routers:[new dr,new pr]})}},_r=e=>{const r={...{origin:"*",allowMethods:["GET","HEAD","PUT","POST","DELETE","PATCH"],allowHeaders:[],exposeHeaders:[]},...e},s=(a=>typeof a=="string"?a==="*"?()=>a:o=>a===o?o:null:typeof a=="function"?a:o=>a.includes(o)?o:null)(r.origin),n=(a=>typeof a=="function"?a:Array.isArray(a)?()=>a:()=>[])(r.allowMethods);return async function(o,c){var u;function i(_,m){o.res.headers.set(_,m)}const l=await s(o.req.header("origin")||"",o);if(l&&i("Access-Control-Allow-Origin",l),r.origin!=="*"){const _=o.req.header("Vary");_?i("Vary",_):i("Vary","Origin")}if(r.credentials&&i("Access-Control-Allow-Credentials","true"),(u=r.exposeHeaders)!=null&&u.length&&i("Access-Control-Expose-Headers",r.exposeHeaders.join(",")),o.req.method==="OPTIONS"){r.maxAge!=null&&i("Access-Control-Max-Age",r.maxAge.toString());const _=await n(o.req.header("origin")||"",o);_.length&&i("Access-Control-Allow-Methods",_.join(","));let m=r.allowHeaders;if(!(m!=null&&m.length)){const j=o.req.header("Access-Control-Request-Headers");j&&(m=j.split(/\s*,\s*/))}return m!=null&&m.length&&(i("Access-Control-Allow-Headers",m.join(",")),o.res.headers.append("Vary","Access-Control-Request-Headers")),o.res.headers.delete("Content-Length"),o.res.headers.delete("Content-Type"),new Response(null,{headers:o.res.headers,status:204,statusText:"No Content"})}await c()}},mr=/^\s*(?:text\/(?!event-stream(?:[;\s]|$))[^;\s]+|application\/(?:javascript|json|xml|xml-dtd|ecmascript|dart|postscript|rtf|tar|toml|vnd\.dart|vnd\.ms-fontobject|vnd\.ms-opentype|wasm|x-httpd-php|x-javascript|x-ns-proxy-autoconfig|x-sh|x-tar|x-virtualbox-hdd|x-virtualbox-ova|x-virtualbox-ovf|x-virtualbox-vbox|x-virtualbox-vdi|x-virtualbox-vhd|x-virtualbox-vmdk|x-www-form-urlencoded)|font\/(?:otf|ttf)|image\/(?:bmp|vnd\.adobe\.photoshop|vnd\.microsoft\.icon|vnd\.ms-dds|x-icon|x-ms-bmp)|message\/rfc822|model\/gltf-binary|x-shader\/x-fragment|x-shader\/x-vertex|[^;\s]+?\+(?:json|text|xml|yaml))(?:[;\s]|$)/i,tt=(e,t=hr)=>{const r=/\.([a-zA-Z0-9]+?)$/,s=e.match(r);if(!s)return;let n=t[s[1]];return n&&n.startsWith("text")&&(n+="; charset=utf-8"),n},fr={aac:"audio/aac",avi:"video/x-msvideo",avif:"image/avif",av1:"video/av1",bin:"application/octet-stream",bmp:"image/bmp",css:"text/css",csv:"text/csv",eot:"application/vnd.ms-fontobject",epub:"application/epub+zip",gif:"image/gif",gz:"application/gzip",htm:"text/html",html:"text/html",ico:"image/x-icon",ics:"text/calendar",jpeg:"image/jpeg",jpg:"image/jpeg",js:"text/javascript",json:"application/json",jsonld:"application/ld+json",map:"application/json",mid:"audio/x-midi",midi:"audio/x-midi",mjs:"text/javascript",mp3:"audio/mpeg",mp4:"video/mp4",mpeg:"video/mpeg",oga:"audio/ogg",ogv:"video/ogg",ogx:"application/ogg",opus:"audio/opus",otf:"font/otf",pdf:"application/pdf",png:"image/png",rtf:"application/rtf",svg:"image/svg+xml",tif:"image/tiff",tiff:"image/tiff",ts:"video/mp2t",ttf:"font/ttf",txt:"text/plain",wasm:"application/wasm",webm:"video/webm",weba:"audio/webm",webmanifest:"application/manifest+json",webp:"image/webp",woff:"font/woff",woff2:"font/woff2",xhtml:"application/xhtml+xml",xml:"application/xml",zip:"application/zip","3gp":"video/3gpp","3g2":"video/3gpp2",gltf:"model/gltf+json",glb:"model/gltf-binary"},hr=fr,Er=(...e)=>{let t=e.filter(n=>n!=="").join("/");t=t.replace(new RegExp("(?<=\\/)\\/+","g"),"");const r=t.split("/"),s=[];for(const n of r)n===".."&&s.length>0&&s.at(-1)!==".."?s.pop():n!=="."&&s.push(n);return s.join("/")||"."},Dt={br:".br",zstd:".zst",gzip:".gz"},yr=Object.keys(Dt),gr="index.html",jr=e=>{const t=e.root??"./",r=e.path,s=e.join??Er;return async(n,a)=>{var u,_,m,j;if(n.finalized)return a();let o;if(e.path)o=e.path;else try{if(o=decodeURIComponent(n.req.path),/(?:^|[\/\\])\.\.(?:$|[\/\\])/.test(o))throw new Error}catch{return await((u=e.onNotFound)==null?void 0:u.call(e,n.req.path,n)),a()}let c=s(t,!r&&e.rewriteRequestPath?e.rewriteRequestPath(o):o);e.isDir&&await e.isDir(c)&&(c=s(c,gr));const i=e.getContent;let l=await i(c,n);if(l instanceof Response)return n.newResponse(l.body,l);if(l){const R=e.mimes&&tt(c,e.mimes)||tt(c);if(n.header("Content-Type",R||"application/octet-stream"),e.precompressed&&(!R||mr.test(R))){const f=new Set((_=n.req.header("Accept-Encoding"))==null?void 0:_.split(",").map(E=>E.trim()));for(const E of yr){if(!f.has(E))continue;const w=await i(c+Dt[E],n);if(w){l=w,n.header("Content-Encoding",E),n.header("Vary","Accept-Encoding",{append:!0});break}}}return await((m=e.onFound)==null?void 0:m.call(e,c,n)),n.body(l)}await((j=e.onNotFound)==null?void 0:j.call(e,c,n)),await a()}},vr=async(e,t)=>{let r;t&&t.manifest?typeof t.manifest=="string"?r=JSON.parse(t.manifest):r=t.manifest:typeof __STATIC_CONTENT_MANIFEST=="string"?r=JSON.parse(__STATIC_CONTENT_MANIFEST):r=__STATIC_CONTENT_MANIFEST;let s;t&&t.namespace?s=t.namespace:s=__STATIC_CONTENT;const n=r[e]||e;if(!n)return null;const a=await s.get(n,{type:"stream"});return a||null},wr=e=>async function(r,s){return jr({...e,getContent:async a=>vr(a,{manifest:e.manifest,namespace:e.namespace?e.namespace:r.env?r.env.__STATIC_CONTENT:void 0})})(r,s)},Rr=e=>wr(e);async function xt(e){const t=crypto.randomUUID(),s=new TextEncoder().encode(e+t),n=await crypto.subtle.digest("SHA-256",s),o=Array.from(new Uint8Array(n)).map(c=>c.toString(16).padStart(2,"0")).join("");return`${t}:${o}`}async function At(e,t){const[r,s]=t.split(":"),a=new TextEncoder().encode(e+r),o=await crypto.subtle.digest("SHA-256",a);return Array.from(new Uint8Array(o)).map(l=>l.toString(16).padStart(2,"0")).join("")===s}async function br(e,t="default-secret-change-in-production"){const r=btoa(JSON.stringify({alg:"HS256",typ:"JWT"})),s=btoa(JSON.stringify({id:e.id,email:e.email,role:e.role,exp:Date.now()+1440*60*1e3})),n=`${r}.${s}`,a=new TextEncoder,o=await crypto.subtle.importKey("raw",a.encode(t),{name:"HMAC",hash:"SHA-256"},!1,["sign"]),c=await crypto.subtle.sign("HMAC",o,a.encode(n)),i=Array.from(new Uint8Array(c)),l=btoa(String.fromCharCode(...i));return`${n}.${l}`}async function Tr(e,t="default-secret-change-in-production"){try{const r=e.split(".");if(r.length!==3)throw new Error("Invalid token format");const[s,n,a]=r,o=`${s}.${n}`,c=new TextEncoder,i=await crypto.subtle.importKey("raw",c.encode(t),{name:"HMAC",hash:"SHA-256"},!1,["verify"]),l=Uint8Array.from(atob(a),m=>m.charCodeAt(0));if(!await crypto.subtle.verify("HMAC",i,l,c.encode(o)))throw new Error("Invalid signature");const _=JSON.parse(atob(n));if(_.exp&&Date.now()>_.exp)throw new Error("Token expired");return _}catch{throw new Error("Token verification failed")}}function Cr(e){if(!e)return null;const t=e.split(" ");return t.length!==2||t[0]!=="Bearer"?null:t[1]}async function W(e,t){try{const r=e.req.header("Authorization"),s=Cr(r);if(!s)return e.json({success:!1,error:"No token provided"},401);const n=e.env.JWT_SECRET||"default-secret-change-in-production",a=await Tr(s,n),o=await e.env.DB.prepare("SELECT id, email, full_name, role, is_active FROM users WHERE id = ? AND is_active = 1").bind(a.id).first();if(!o)return e.json({success:!1,error:"User not found or inactive"},401);e.set("user",o),await t()}catch{return e.json({success:!1,error:"Authentication failed"},401)}}function v(...e){return async(t,r)=>{const s=t.get("user");if(!s)return t.json({success:!1,error:"User not authenticated"},401);if(!e.includes(s.role))return t.json({success:!1,error:"Insufficient permissions"},403);await r()}}const Fe=new U;Fe.post("/login",async e=>{try{const{email:t,password:r}=await e.req.json();if(!t||!r)return e.json({success:!1,message:"Email and password required"},400);const s=await e.env.DB.prepare("SELECT * FROM users WHERE email = ? AND is_active = 1").bind(t).first();if(!s||!s.password_hash)return e.json({success:!1,message:"Invalid credentials"},401);if(!await At(r,s.password_hash))return e.json({success:!1,message:"Invalid credentials"},401);await e.env.DB.prepare("UPDATE users SET last_login = CURRENT_TIMESTAMP WHERE id = ?").bind(s.id).run();const a=e.env.JWT_SECRET||"default-secret-change-in-production",o=await br(s,a),{password_hash:c,...i}=s;return e.json({success:!0,token:o,user:i})}catch(t){return console.error("Login error:",t),e.json({success:!1,message:"Login failed"},500)}});Fe.post("/register",W,async e=>{try{if(e.get("user").role!=="admin")return e.json({success:!1,error:"Only admins can register new users"},403);const{email:r,password:s,full_name:n,role:a}=await e.req.json();if(!r||!s||!n||!a)return e.json({success:!1,error:"Email, password, full_name, and role are required"},400);if(await e.env.DB.prepare("SELECT id FROM users WHERE email = ?").bind(r).first())return e.json({success:!1,error:"User with this email already exists"},400);const c=await xt(s),i=await e.env.DB.prepare("INSERT INTO users (email, password_hash, full_name, role) VALUES (?, ?, ?, ?)").bind(r,c,n,a).run();return e.json({success:!0,message:"User registered successfully",data:{id:i.meta.last_row_id}})}catch(t){return console.error("Registration error:",t),e.json({success:!1,error:"Registration failed"},500)}});Fe.get("/me",W,async e=>{try{const t=e.get("user");return e.json({success:!0,data:t})}catch{return e.json({success:!1,error:"Failed to get user info"},500)}});Fe.post("/change-password",W,async e=>{try{const t=e.get("user"),{current_password:r,new_password:s}=await e.req.json();if(!r||!s)return e.json({success:!1,error:"Current and new password required"},400);const n=await e.env.DB.prepare("SELECT password_hash FROM users WHERE id = ?").bind(t.id).first();if(!n||!n.password_hash)return e.json({success:!1,error:"User not found"},404);if(!await At(r,n.password_hash))return e.json({success:!1,error:"Current password is incorrect"},401);const o=await xt(s);return await e.env.DB.prepare("UPDATE users SET password_hash = ?, updated_at = CURRENT_TIMESTAMP WHERE id = ?").bind(o,t.id).run(),e.json({success:!0,message:"Password changed successfully"})}catch(t){return console.error("Change password error:",t),e.json({success:!1,error:"Failed to change password"},500)}});const M=new U;M.use("*",W);M.get("/",async e=>{try{const t=e.get("user"),r=e.req.query("status"),s=e.req.query("client");let n="SELECT * FROM projects WHERE 1=1";const a=[];r&&(n+=" AND status = ?",a.push(r)),s&&(n+=" AND client_name LIKE ?",a.push(`%${s}%`)),n+=" ORDER BY created_at DESC";const{results:o}=await e.env.DB.prepare(n).bind(...a).all();return e.json({success:!0,data:o})}catch(t){return console.error("Get projects error:",t),e.json({success:!1,error:"Failed to fetch projects"},500)}});M.get("/:id",async e=>{try{const t=e.req.param("id"),r=await e.env.DB.prepare("SELECT * FROM projects WHERE id = ?").bind(t).first();if(!r)return e.json({success:!1,error:"Project not found"},404);const{results:s}=await e.env.DB.prepare("SELECT * FROM milestones WHERE project_id = ? ORDER BY sequence_order").bind(t).all(),n=await e.env.DB.prepare(`
      SELECT 
        (SELECT COALESCE(SUM(total_cost), 0) FROM cost_line_items WHERE project_id = ?) as labour_cost,
        (SELECT COALESCE(SUM(total_cost), 0) FROM material_costs WHERE project_id = ?) as material_cost
    `).bind(t,t).first();return e.json({success:!0,data:{...r,milestones:s,costSummary:n}})}catch(t){return console.error("Get project error:",t),e.json({success:!1,error:"Failed to fetch project"},500)}});M.post("/",v("admin","manager"),async e=>{try{const t=e.get("user"),r=await e.req.json(),{project_code:s,project_name:n,client_name:a,start_date:o,end_date:c,tax_rate:i,ga_percentage:l,ga_application:u,total_revenue:_}=r;if(!s||!n||!a||!o||!c)return e.json({success:!1,error:"Required fields: project_code, project_name, client_name, start_date, end_date"},400);if(await e.env.DB.prepare("SELECT id FROM projects WHERE project_code = ?").bind(s).first())return e.json({success:!1,error:"Project code already exists"},400);const j=await e.env.DB.prepare(`
      INSERT INTO projects (
        project_code, project_name, client_name, start_date, end_date,
        tax_rate, ga_percentage, ga_application, total_revenue, created_by
      ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
    `).bind(s,n,a,o,c,i||0,l||0,u||"all",_||0,t.id).run();return e.json({success:!0,message:"Project created successfully",data:{id:j.meta.last_row_id}},201)}catch(t){return console.error("Create project error:",t),e.json({success:!1,error:"Failed to create project"},500)}});M.put("/:id",v("admin","manager"),async e=>{try{const t=e.req.param("id"),r=await e.req.json();if(!await e.env.DB.prepare("SELECT id FROM projects WHERE id = ?").bind(t).first())return e.json({success:!1,error:"Project not found"},404);const{project_name:n,client_name:a,start_date:o,end_date:c,status:i,tax_rate:l,ga_percentage:u,ga_application:_,total_revenue:m}=r;return await e.env.DB.prepare(`
      UPDATE projects SET
        project_name = COALESCE(?, project_name),
        client_name = COALESCE(?, client_name),
        start_date = COALESCE(?, start_date),
        end_date = COALESCE(?, end_date),
        status = COALESCE(?, status),
        tax_rate = COALESCE(?, tax_rate),
        ga_percentage = COALESCE(?, ga_percentage),
        ga_application = COALESCE(?, ga_application),
        total_revenue = COALESCE(?, total_revenue),
        updated_at = CURRENT_TIMESTAMP
      WHERE id = ?
    `).bind(n,a,o,c,i,l,u,_,m,t).run(),e.json({success:!0,message:"Project updated successfully"})}catch(t){return console.error("Update project error:",t),e.json({success:!1,error:"Failed to update project"},500)}});M.delete("/:id",v("admin"),async e=>{try{const t=e.req.param("id");return await e.env.DB.prepare("SELECT id FROM projects WHERE id = ?").bind(t).first()?(await e.env.DB.prepare("DELETE FROM projects WHERE id = ?").bind(t).run(),e.json({success:!0,message:"Project deleted successfully"})):e.json({success:!1,error:"Project not found"},404)}catch(t){return console.error("Delete project error:",t),e.json({success:!1,error:"Failed to delete project"},500)}});M.post("/:id/recalculate",v("admin","manager","user"),async e=>{try{const t=e.req.param("id"),r=await e.env.DB.prepare("SELECT * FROM projects WHERE id = ?").bind(t).first();if(!r)return e.json({success:!1,error:"Project not found"},404);const s=await e.env.DB.prepare(`
      SELECT 
        COALESCE(SUM(cli.total_cost), 0) as labour_cost,
        COALESCE(SUM(mc.total_cost), 0) as material_cost
      FROM projects p
      LEFT JOIN cost_line_items cli ON p.id = cli.project_id
      LEFT JOIN material_costs mc ON p.id = mc.project_id
      WHERE p.id = ?
      GROUP BY p.id
    `).bind(t).first(),n=(s==null?void 0:s.labour_cost)||0,a=(s==null?void 0:s.material_cost)||0,o=n+a,c=r.total_revenue-o,i=r.total_revenue>0?c/r.total_revenue*100:0;return await e.env.DB.prepare(`
      UPDATE projects SET
        total_labour_cost = ?,
        total_material_cost = ?,
        total_cost = ?,
        margin_percentage = ?,
        updated_at = CURRENT_TIMESTAMP
      WHERE id = ?
    `).bind(n,a,o,i,t).run(),e.json({success:!0,message:"Project recalculated successfully",data:{total_labour_cost:n,total_material_cost:a,total_cost:o,margin_percentage:i}})}catch(t){return console.error("Recalculate project error:",t),e.json({success:!1,error:"Failed to recalculate project"},500)}});M.post("/with-details",v("admin","manager"),async e=>{try{const t=e.get("user"),r=await e.req.json(),{project:s,milestones:n=[],labour_costs:a=[],material_costs:o=[],payment_schedule:c=[]}=r;if(!s||!s.project_code||!s.project_name||!s.client_name)return e.json({success:!1,error:"Project data with code, name, and client required"},400);if(await e.env.DB.prepare("SELECT id FROM projects WHERE project_code = ?").bind(s.project_code).first())return e.json({success:!1,error:"Project code already exists"},400);const u=(await e.env.DB.prepare(`
      INSERT INTO projects (
        project_code, project_name, client_name, start_date, end_date,
        tax_rate, ga_percentage, ga_application, total_revenue, created_by
      ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
    `).bind(s.project_code,s.project_name,s.client_name,s.start_date,s.end_date,s.tax_rate||0,s.ga_percentage||0,s.ga_application||"all",s.total_revenue||0,t.id).run()).meta.last_row_id,_={};for(const p of n){if(!p.milestone_code||!p.milestone_name)continue;const O=await e.env.DB.prepare(`
        INSERT INTO milestones (project_id, milestone_code, milestone_name, milestone_date, description, sequence_order)
        VALUES (?, ?, ?, ?, ?, ?)
      `).bind(u,p.milestone_code,p.milestone_name,p.milestone_date,p.description,p.sequence_order||0).run();_[p.milestone_code]=O.meta.last_row_id}for(const p of a){if(!p.task_description||!p.rate_type||!p.hours||!p.hourly_rate)continue;const O=p.milestone_code?_[p.milestone_code]:p.milestone_id,T=p.hours*p.hourly_rate,F=p.apply_ga!==void 0?p.apply_ga:1,k=F?T*(s.ga_percentage/100):0,N=T+k;await e.env.DB.prepare(`
        INSERT INTO cost_line_items (
          project_id, milestone_id, wbs_code, task_description, rate_type,
          personnel_id, rate_band_id, hours, hourly_rate, apply_ga,
          base_cost, ga_cost, total_cost, notes
        ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
      `).bind(u,O,p.wbs_code,p.task_description,p.rate_type,p.personnel_id,p.rate_band_id,p.hours,p.hourly_rate,F,T,k,N,p.notes).run()}for(const p of o){if(!p.material_description||!p.cost_type||!p.quantity||!p.unit_cost)continue;const O=p.milestone_code?_[p.milestone_code]:p.milestone_id;let T=p.quantity*p.unit_cost,F=null;p.cost_type==="monthly"&&p.start_month!==void 0&&p.end_month!==void 0&&(F=p.end_month-p.start_month+1,T=p.quantity*p.unit_cost*F);const k=p.apply_ga!==void 0?p.apply_ga:1,N=k?T*(s.ga_percentage/100):0,I=T+N;await e.env.DB.prepare(`
        INSERT INTO material_costs (
          project_id, milestone_id, material_description, material_category, cost_type,
          quantity, unit_cost, start_month, end_month, months_count, apply_ga,
          base_cost, ga_cost, total_cost, supplier, notes
        ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
      `).bind(u,O,p.material_description,p.material_category,p.cost_type,p.quantity,p.unit_cost,p.start_month,p.end_month,F,k,T,N,I,p.supplier,p.notes).run()}for(const p of c){if(!p.payment_description||!p.invoice_amount)continue;const O=p.milestone_code?_[p.milestone_code]:p.milestone_id;await e.env.DB.prepare(`
        INSERT INTO payment_schedule (
          project_id, milestone_id, payment_description, payment_date,
          invoice_amount, invoice_number, payment_status, notes
        ) VALUES (?, ?, ?, ?, ?, ?, ?, ?)
      `).bind(u,O,p.payment_description,p.payment_date,p.invoice_amount,p.invoice_number,p.payment_status||"pending",p.notes).run()}const m=await e.env.DB.prepare(`
      SELECT 
        COALESCE(SUM(cli.total_cost), 0) as labour_cost,
        COALESCE(SUM(mc.total_cost), 0) as material_cost
      FROM projects p
      LEFT JOIN cost_line_items cli ON p.id = cli.project_id
      LEFT JOIN material_costs mc ON p.id = mc.project_id
      WHERE p.id = ?
      GROUP BY p.id
    `).bind(u).first(),j=(m==null?void 0:m.labour_cost)||0,R=(m==null?void 0:m.material_cost)||0,f=j+R,E=s.total_revenue-f,w=s.total_revenue>0?E/s.total_revenue*100:0;return await e.env.DB.prepare(`
      UPDATE projects SET
        total_labour_cost = ?,
        total_material_cost = ?,
        total_cost = ?,
        margin_percentage = ?
      WHERE id = ?
    `).bind(j,R,f,w,u).run(),e.json({success:!0,message:"Project created successfully with all details",data:{project_id:u,milestones_created:Object.keys(_).length,labour_items_created:a.length,material_items_created:o.length,payments_created:c.length,totals:{total_labour_cost:j,total_material_cost:R,total_cost:f,margin_percentage:w}}},201)}catch(t){return console.error("Create project with details error:",t),e.json({success:!1,error:"Failed to create project. Transaction rolled back."},500)}});M.post("/:id/submit-for-approval",v("user","manager","admin"),async e=>{try{const t=e.req.param("id"),r=e.get("user"),{approver_id:s,comments:n}=await e.req.json(),a=await e.env.DB.prepare("SELECT * FROM projects WHERE id = ?").bind(t).first();if(!a)return e.json({success:!1,error:"Project not found"},404);if(a.approval_status!=="draft")return e.json({success:!1,error:`Project is already ${a.approval_status}. Only draft projects can be submitted.`},400);await e.env.DB.prepare(`
      UPDATE projects 
      SET approval_status = 'pending_approval',
          submitted_at = CURRENT_TIMESTAMP,
          submitted_by = ?
      WHERE id = ?
    `).bind(r.id,t).run(),await e.env.DB.prepare(`
      INSERT INTO project_approvals (project_id, approver_id, action, comments)
      VALUES (?, ?, 'submitted', ?)
    `).bind(t,s||r.id,n||"Project submitted for approval").run();const o=await e.env.DB.prepare("SELECT * FROM projects WHERE id = ?").bind(t).first();return e.json({success:!0,data:o})}catch(t){return console.error("Submit for approval error:",t),e.json({success:!1,error:"Failed to submit project"},500)}});M.post("/:id/approve",v("manager","admin"),async e=>{try{const t=e.req.param("id"),r=e.get("user"),{comments:s}=await e.req.json(),n=await e.env.DB.prepare("SELECT * FROM projects WHERE id = ?").bind(t).first();if(!n)return e.json({success:!1,error:"Project not found"},404);if(n.approval_status!=="pending_approval")return e.json({success:!1,error:`Project is ${n.approval_status}. Only pending projects can be approved.`},400);await e.env.DB.prepare(`
      UPDATE projects 
      SET approval_status = 'approved',
          approved_at = CURRENT_TIMESTAMP,
          approved_by = ?,
          status = 'active'
      WHERE id = ?
    `).bind(r.id,t).run(),await e.env.DB.prepare(`
      INSERT INTO project_approvals (project_id, approver_id, action, comments)
      VALUES (?, ?, 'approved', ?)
    `).bind(t,r.id,s||"Project approved").run();const a=await e.env.DB.prepare("SELECT * FROM projects WHERE id = ?").bind(t).first();return e.json({success:!0,data:a})}catch(t){return console.error("Approve project error:",t),e.json({success:!1,error:"Failed to approve project"},500)}});M.post("/:id/reject",v("manager","admin"),async e=>{try{const t=e.req.param("id"),r=e.get("user"),{comments:s,rejection_reason:n}=await e.req.json(),a=await e.env.DB.prepare("SELECT * FROM projects WHERE id = ?").bind(t).first();if(!a)return e.json({success:!1,error:"Project not found"},404);if(a.approval_status!=="pending_approval")return e.json({success:!1,error:`Project is ${a.approval_status}. Only pending projects can be rejected.`},400);await e.env.DB.prepare(`
      UPDATE projects 
      SET approval_status = 'rejected',
          rejection_reason = ?
      WHERE id = ?
    `).bind(n||"No reason provided",t).run(),await e.env.DB.prepare(`
      INSERT INTO project_approvals (project_id, approver_id, action, comments)
      VALUES (?, ?, 'rejected', ?)
    `).bind(t,r.id,s||n||"Project rejected").run();const o=await e.env.DB.prepare("SELECT * FROM projects WHERE id = ?").bind(t).first();return e.json({success:!0,data:o})}catch(t){return console.error("Reject project error:",t),e.json({success:!1,error:"Failed to reject project"},500)}});M.get("/pending-approval",v("manager","admin"),async e=>{try{const{results:t}=await e.env.DB.prepare(`
      SELECT p.*, u.full_name as submitted_by_name, u.email as submitted_by_email
      FROM projects p
      LEFT JOIN users u ON p.submitted_by = u.id
      WHERE p.approval_status = 'pending_approval'
      ORDER BY p.submitted_at DESC
    `).all();return e.json({success:!0,data:t})}catch(t){return console.error("Get pending approvals error:",t),e.json({success:!1,error:"Failed to fetch pending approvals"},500)}});M.get("/my-submissions",async e=>{try{const t=e.get("user"),{results:r}=await e.env.DB.prepare(`
      SELECT p.*, u.full_name as approved_by_name
      FROM projects p
      LEFT JOIN users u ON p.approved_by = u.id
      WHERE p.submitted_by = ?
      ORDER BY p.submitted_at DESC
    `).bind(t.id).all();return e.json({success:!0,data:r})}catch(t){return console.error("Get my submissions error:",t),e.json({success:!1,error:"Failed to fetch submissions"},500)}});const me=new U;me.use("*",W);me.get("/",async e=>{try{const t=e.req.query("active")==="true",r=e.req.query("role");let s="SELECT * FROM personnel WHERE 1=1";const n=[];t&&(s+=" AND is_active = 1"),r&&(s+=" AND employee_role LIKE ?",n.push(`%${r}%`)),s+=" ORDER BY employee_name";const{results:a}=await e.env.DB.prepare(s).bind(...n).all();return e.json({success:!0,data:a})}catch{return e.json({success:!1,error:"Failed to fetch personnel"},500)}});me.get("/:id",async e=>{try{const t=e.req.param("id"),r=await e.env.DB.prepare("SELECT * FROM personnel WHERE id = ?").bind(t).first();return r?e.json({success:!0,data:r}):e.json({success:!1,error:"Personnel not found"},404)}catch{return e.json({success:!1,error:"Failed to fetch personnel"},500)}});me.post("/",v("admin","manager"),async e=>{try{const t=await e.req.json(),{employee_id:r,employee_name:s,employee_role:n,employee_level:a,hourly_cost:o,banded_rate:c}=t;if(!r||!s||!n||!o)return e.json({success:!1,error:"Required fields: employee_id, employee_name, employee_role, hourly_cost"},400);const i=await e.env.DB.prepare(`
      INSERT INTO personnel (employee_id, employee_name, employee_role, employee_level, hourly_cost, banded_rate)
      VALUES (?, ?, ?, ?, ?, ?)
    `).bind(r,s,n,a,o,c).run();return e.json({success:!0,message:"Personnel created successfully",data:{id:i.meta.last_row_id}},201)}catch{return e.json({success:!1,error:"Failed to create personnel"},500)}});me.put("/:id",v("admin","manager"),async e=>{try{const t=e.req.param("id"),r=await e.req.json();if(!await e.env.DB.prepare("SELECT id FROM personnel WHERE id = ?").bind(t).first())return e.json({success:!1,error:"Personnel not found"},404);const{employee_name:n,employee_role:a,employee_level:o,hourly_cost:c,banded_rate:i,is_active:l,notes:u}=r;return await e.env.DB.prepare(`
      UPDATE personnel SET
        employee_name = COALESCE(?, employee_name),
        employee_role = COALESCE(?, employee_role),
        employee_level = COALESCE(?, employee_level),
        hourly_cost = COALESCE(?, hourly_cost),
        banded_rate = COALESCE(?, banded_rate),
        is_active = COALESCE(?, is_active),
        notes = COALESCE(?, notes),
        updated_at = CURRENT_TIMESTAMP
      WHERE id = ?
    `).bind(n,a,o,c,i,l,u,t).run(),e.json({success:!0,message:"Personnel updated successfully"})}catch{return e.json({success:!1,error:"Failed to update personnel"},500)}});me.delete("/:id",v("admin"),async e=>{try{const t=e.req.param("id");return await e.env.DB.prepare("DELETE FROM personnel WHERE id = ?").bind(t).run(),e.json({success:!0,message:"Personnel deleted successfully"})}catch{return e.json({success:!1,error:"Failed to delete personnel"},500)}});const $=new U;$.use("*",W);function Ge(e,t,r){const s=t?e*(r/100):0,n=e+s;return{baseCost:e,gaCost:s,totalCost:n}}$.get("/labour",async e=>{try{const t=e.req.query("project_id"),r=e.req.query("milestone_id");if(!t)return e.json({success:!1,error:"project_id required"},400);let s=`
      SELECT cli.*, 
        p.employee_name as personnel_name,
        rb.band_name as rate_band_name,
        m.milestone_name
      FROM cost_line_items cli
      LEFT JOIN personnel p ON cli.personnel_id = p.id
      LEFT JOIN rate_bands rb ON cli.rate_band_id = rb.id
      LEFT JOIN milestones m ON cli.milestone_id = m.id
      WHERE cli.project_id = ?
    `;const n=[t];r&&(s+=" AND cli.milestone_id = ?",n.push(r)),s+=" ORDER BY cli.id";const{results:a}=await e.env.DB.prepare(s).bind(...n).all();return e.json({success:!0,data:a})}catch{return e.json({success:!1,error:"Failed to fetch labour costs"},500)}});$.post("/labour",v("admin","manager","user"),async e=>{try{const t=await e.req.json(),{project_id:r,milestone_id:s,wbs_code:n,task_description:a,rate_type:o,personnel_id:c,rate_band_id:i,hours:l,hourly_rate:u,apply_ga:_,notes:m}=t;if(!r||!a||!o||!l||!u)return e.json({success:!1,error:"Required: project_id, task_description, rate_type, hours, hourly_rate"},400);const j=await e.env.DB.prepare("SELECT ga_percentage FROM projects WHERE id = ?").bind(r).first();if(!j)return e.json({success:!1,error:"Project not found"},404);const R=l*u,{gaCost:f,totalCost:E}=Ge(R,_??1,j.ga_percentage),w=await e.env.DB.prepare(`
      INSERT INTO cost_line_items (
        project_id, milestone_id, wbs_code, task_description, rate_type,
        personnel_id, rate_band_id, hours, hourly_rate, apply_ga,
        base_cost, ga_cost, total_cost, notes
      ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
    `).bind(r,s,n,a,o,c,i,l,u,_??1,R,f,E,m).run();return e.json({success:!0,message:"Labour cost created successfully",data:{id:w.meta.last_row_id,baseCost:R,gaCost:f,totalCost:E}},201)}catch(t){return console.error("Create labour cost error:",t),e.json({success:!1,error:"Failed to create labour cost"},500)}});$.put("/labour/:id",v("admin","manager","user"),async e=>{try{const t=e.req.param("id"),r=await e.req.json(),s=await e.env.DB.prepare("SELECT project_id FROM cost_line_items WHERE id = ?").bind(t).first();if(!s)return e.json({success:!1,error:"Labour cost not found"},404);const n=await e.env.DB.prepare("SELECT ga_percentage FROM projects WHERE id = ?").bind(s.project_id).first(),{milestone_id:a,wbs_code:o,task_description:c,rate_type:i,personnel_id:l,rate_band_id:u,hours:_,hourly_rate:m,apply_ga:j,notes:R}=r;let f="UPDATE cost_line_items SET updated_at = CURRENT_TIMESTAMP";const E=[];if(_!==void 0||m!==void 0){const w=await e.env.DB.prepare("SELECT * FROM cost_line_items WHERE id = ?").bind(t).first(),p=_??(w==null?void 0:w.hours)??0,O=m??(w==null?void 0:w.hourly_rate)??0,T=j??(w==null?void 0:w.apply_ga)??1,F=p*O,{gaCost:k,totalCost:N}=Ge(F,T,(n==null?void 0:n.ga_percentage)??0);f+=", hours = ?, hourly_rate = ?, base_cost = ?, ga_cost = ?, total_cost = ?",E.push(p,O,F,k,N)}return a!==void 0&&(f+=", milestone_id = ?",E.push(a)),o!==void 0&&(f+=", wbs_code = ?",E.push(o)),c!==void 0&&(f+=", task_description = ?",E.push(c)),i!==void 0&&(f+=", rate_type = ?",E.push(i)),l!==void 0&&(f+=", personnel_id = ?",E.push(l)),u!==void 0&&(f+=", rate_band_id = ?",E.push(u)),j!==void 0&&(f+=", apply_ga = ?",E.push(j)),R!==void 0&&(f+=", notes = ?",E.push(R)),f+=" WHERE id = ?",E.push(t),await e.env.DB.prepare(f).bind(...E).run(),e.json({success:!0,message:"Labour cost updated successfully"})}catch(t){return console.error("Update labour cost error:",t),e.json({success:!1,error:"Failed to update labour cost"},500)}});$.delete("/labour/:id",v("admin","manager"),async e=>{try{const t=e.req.param("id");return await e.env.DB.prepare("DELETE FROM cost_line_items WHERE id = ?").bind(t).run(),e.json({success:!0,message:"Labour cost deleted successfully"})}catch{return e.json({success:!1,error:"Failed to delete labour cost"},500)}});$.get("/material",async e=>{try{const t=e.req.query("project_id");if(!t)return e.json({success:!1,error:"project_id required"},400);const{results:r}=await e.env.DB.prepare(`
      SELECT mc.*, m.milestone_name
      FROM material_costs mc
      LEFT JOIN milestones m ON mc.milestone_id = m.id
      WHERE mc.project_id = ?
      ORDER BY mc.id
    `).bind(t).all();return e.json({success:!0,data:r})}catch{return e.json({success:!1,error:"Failed to fetch material costs"},500)}});$.post("/material",v("admin","manager","user"),async e=>{try{const t=await e.req.json(),{project_id:r,milestone_id:s,material_description:n,material_category:a,cost_type:o,quantity:c,unit_cost:i,start_month:l,end_month:u,apply_ga:_,supplier:m,notes:j}=t;if(!r||!n||!o||!c||!i)return e.json({success:!1,error:"Required: project_id, material_description, cost_type, quantity, unit_cost"},400);const R=await e.env.DB.prepare("SELECT ga_percentage FROM projects WHERE id = ?").bind(r).first();if(!R)return e.json({success:!1,error:"Project not found"},404);let f=c*i,E=null;o==="monthly"&&l!==void 0&&u!==void 0&&(E=u-l+1,f=c*i*E);const{gaCost:w,totalCost:p}=Ge(f,_??1,R.ga_percentage),O=await e.env.DB.prepare(`
      INSERT INTO material_costs (
        project_id, milestone_id, material_description, material_category, cost_type,
        quantity, unit_cost, start_month, end_month, months_count, apply_ga,
        base_cost, ga_cost, total_cost, supplier, notes
      ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
    `).bind(r,s,n,a,o,c,i,l,u,E,_??1,f,w,p,m,j).run();return e.json({success:!0,message:"Material cost created successfully",data:{id:O.meta.last_row_id,baseCost:f,gaCost:w,totalCost:p}},201)}catch(t){return console.error("Create material cost error:",t),e.json({success:!1,error:"Failed to create material cost"},500)}});$.put("/material/:id",v("admin","manager","user"),async e=>{try{const t=e.req.param("id"),r=await e.req.json();if(!await e.env.DB.prepare("SELECT project_id FROM material_costs WHERE id = ?").bind(t).first())return e.json({success:!1,error:"Material cost not found"},404);const{milestone_id:n,material_description:a,material_category:o,quantity:c,unit_cost:i,supplier:l,notes:u}=r;return await e.env.DB.prepare(`
      UPDATE material_costs SET
        milestone_id = COALESCE(?, milestone_id),
        material_description = COALESCE(?, material_description),
        material_category = COALESCE(?, material_category),
        quantity = COALESCE(?, quantity),
        unit_cost = COALESCE(?, unit_cost),
        supplier = COALESCE(?, supplier),
        notes = COALESCE(?, notes),
        updated_at = CURRENT_TIMESTAMP
      WHERE id = ?
    `).bind(n,a,o,c,i,l,u,t).run(),e.json({success:!0,message:"Material cost updated successfully"})}catch{return e.json({success:!1,error:"Failed to update material cost"},500)}});$.delete("/material/:id",v("admin","manager"),async e=>{try{const t=e.req.param("id");return await e.env.DB.prepare("DELETE FROM material_costs WHERE id = ?").bind(t).run(),e.json({success:!0,message:"Material cost deleted successfully"})}catch{return e.json({success:!1,error:"Failed to delete material cost"},500)}});const J=new U;J.use("*",W);J.get("/xero/status",async e=>{try{const t=!!e.env.XERO_CLIENT_ID,r=!!e.env.XERO_CLIENT_SECRET,s=!!e.env.XERO_ACCESS_TOKEN;return e.json({success:!0,data:{configured:t&&r,connected:s,message:s?"Xero is connected":t&&r?"Xero credentials configured. Please authorize to connect.":"Xero credentials not configured. Please add XERO_CLIENT_ID and XERO_CLIENT_SECRET to Cloudflare secrets."}})}catch{return e.json({success:!1,error:"Failed to check Xero status"},500)}});J.get("/xero/auth-url",v("admin"),async e=>{try{const t=e.env.XERO_CLIENT_ID,r=e.env.XERO_REDIRECT_URI||`${new URL(e.req.url).origin}/api/integrations/xero/callback`;if(!t)return e.json({success:!1,error:"Xero client ID not configured"},400);const s=`https://login.xero.com/identity/connect/authorize?response_type=code&client_id=${t}&redirect_uri=${encodeURIComponent(r)}&scope=accounting.transactions.read accounting.contacts.read offline_access&state=${crypto.randomUUID()}`;return e.json({success:!0,data:{authUrl:s}})}catch{return e.json({success:!1,error:"Failed to generate auth URL"},500)}});J.get("/xero/callback",async e=>{try{const t=e.req.query("code"),r=e.req.query("state");if(!t)return e.json({success:!1,error:"Authorization code not received"},400);const s=e.env.XERO_CLIENT_ID,n=e.env.XERO_CLIENT_SECRET,a=e.env.XERO_REDIRECT_URI||`${new URL(e.req.url).origin}/api/integrations/xero/callback`,o=await fetch("https://identity.xero.com/connect/token",{method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded",Authorization:`Basic ${btoa(`${s}:${n}`)}`},body:new URLSearchParams({grant_type:"authorization_code",code:t,redirect_uri:a})});if(!o.ok)return e.json({success:!1,error:"Failed to exchange authorization code"},500);const c=await o.json();return e.json({success:!0,message:"Xero connected successfully. Please store the access token as XERO_ACCESS_TOKEN secret.",data:{access_token:c.access_token,refresh_token:c.refresh_token,expires_in:c.expires_in}})}catch(t){return console.error("Xero callback error:",t),e.json({success:!1,error:"Xero authorization failed"},500)}});J.post("/xero/sync-invoices",v("admin","manager"),async e=>{try{const{project_id:t}=await e.req.json();if(!t)return e.json({success:!1,error:"project_id required"},400);const r=e.env.XERO_ACCESS_TOKEN;if(!r)return e.json({success:!1,error:"Xero not connected. Please authorize first."},400);const s=await fetch("https://api.xero.com/connections",{headers:{Authorization:`Bearer ${r}`,"Content-Type":"application/json"}});if(!s.ok)return e.json({success:!1,error:"Failed to get Xero connections"},500);const n=await s.json();if(!n||n.length===0)return e.json({success:!1,error:"No Xero organizations connected"},400);const a=n[0].tenantId,o=await fetch("https://api.xero.com/api.xro/2.0/Invoices",{headers:{Authorization:`Bearer ${r}`,"xero-tenant-id":a,Accept:"application/json"}});if(!o.ok)return e.json({success:!1,error:"Failed to fetch invoices from Xero"},500);const i=(await o.json()).Invoices||[];let l=0;for(const u of i)await e.env.DB.prepare(`
        INSERT OR REPLACE INTO xero_imports (
          project_id, xero_invoice_id, invoice_number, invoice_date, 
          due_date, total_amount, status, raw_data, synced_at
        ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP)
      `).bind(t,u.InvoiceID,u.InvoiceNumber,u.Date,u.DueDate,u.Total,u.Status,JSON.stringify(u)).run(),l++;return e.json({success:!0,message:`Successfully imported ${l} invoices from Xero`,data:{imported:l}})}catch(t){return console.error("Xero sync error:",t),e.json({success:!1,error:"Failed to sync invoices from Xero"},500)}});J.get("/msp/status",async e=>{try{const t=!!e.env.MSP_CLIENT_ID,r=!!e.env.MSP_CLIENT_SECRET,s=!!e.env.MSP_ACCESS_TOKEN;return e.json({success:!0,data:{configured:t&&r,connected:s,message:s?"Microsoft Project is connected":t&&r?"Microsoft Project credentials configured. Please authorize to connect.":"Microsoft Project credentials not configured."}})}catch{return e.json({success:!1,error:"Failed to check MSP status"},500)}});J.post("/msp/upload",v("admin","manager"),async e=>{try{const{project_id:t,file_content:r}=await e.req.json();if(!t||!r)return e.json({success:!1,error:"project_id and file_content required"},400);const s=JSON.parse(r);let n=0;for(const a of s)await e.env.DB.prepare(`
        INSERT INTO msp_imports (
          project_id, msp_task_id, task_name, resource_name,
          work_hours, start_date, finish_date, raw_data, synced_at
        ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP)
      `).bind(t,a.TaskID||a.id,a.Name||a.name,a.ResourceName||a.resource,a.Work||a.hours||0,a.Start||a.start_date,a.Finish||a.finish_date,JSON.stringify(a)).run(),n++;return e.json({success:!0,message:`Successfully imported ${n} tasks from Microsoft Project`,data:{imported:n}})}catch(t){return console.error("MSP upload error:",t),e.json({success:!1,error:"Failed to import Microsoft Project data"},500)}});J.post("/msp/export",v("admin","manager","user"),async e=>{try{const{project_id:t}=await e.req.json();if(!t)return e.json({success:!1,error:"project_id required"},400);const r=await e.env.DB.prepare("SELECT * FROM projects WHERE id = ?").bind(t).first();if(!r)return e.json({success:!1,error:"Project not found"},404);const{results:s}=await e.env.DB.prepare("SELECT * FROM milestones WHERE project_id = ? ORDER BY sequence_order").bind(t).all(),{results:n}=await e.env.DB.prepare(`
      SELECT cli.*, p.employee_name as resource_name
      FROM cost_line_items cli
      LEFT JOIN personnel p ON cli.personnel_id = p.id
      WHERE cli.project_id = ?
      ORDER BY cli.id
    `).bind(t).all(),a={ProjectName:r.project_name,StartDate:r.start_date,FinishDate:r.end_date,Tasks:[...s.map((o,c)=>({TaskID:`M${c+1}`,Name:o.milestone_name,Start:o.milestone_date,Finish:o.milestone_date,IsMilestone:!0})),...n.map((o,c)=>({TaskID:`T${c+1}`,Name:o.task_description,ResourceName:o.resource_name||"Unassigned",Work:o.hours,Cost:o.total_cost}))]};return e.json({success:!0,data:a})}catch(t){return console.error("MSP export error:",t),e.json({success:!1,error:"Failed to export to Microsoft Project format"},500)}});const Y=new U;Y.use("*",W);Y.get("/",async e=>{try{const t=e.req.query("project_id");if(!t)return e.json({success:!1,error:"project_id required"},400);const{results:r}=await e.env.DB.prepare("SELECT * FROM milestones WHERE project_id = ? ORDER BY sequence_order, milestone_date").bind(t).all();return e.json({success:!0,data:r})}catch(t){return console.error("Get milestones error:",t),e.json({success:!1,error:"Failed to fetch milestones"},500)}});Y.get("/:id",async e=>{try{const t=e.req.param("id"),r=await e.env.DB.prepare("SELECT * FROM milestones WHERE id = ?").bind(t).first();return r?e.json({success:!0,data:r}):e.json({success:!1,error:"Milestone not found"},404)}catch{return e.json({success:!1,error:"Failed to fetch milestone"},500)}});Y.post("/",v("admin","manager","user"),async e=>{try{const t=await e.req.json(),{project_id:r,milestone_code:s,milestone_name:n,milestone_date:a,description:o,sequence_order:c,parent_milestone_id:i,milestone_level:l}=t;if(!r||!s||!n)return e.json({success:!1,error:"Required: project_id, milestone_code, milestone_name"},400);if(await e.env.DB.prepare("SELECT id FROM milestones WHERE project_id = ? AND milestone_code = ?").bind(r,s).first())return e.json({success:!1,error:"Milestone code already exists for this project"},400);let _=s,m=l||0,j=0;if(i){const E=await e.env.DB.prepare("SELECT milestone_code, milestone_path, milestone_level FROM milestones WHERE id = ?").bind(i).first();E&&(_=E.milestone_path?`${E.milestone_path}.${s}`:s,m=(E.milestone_level||0)+1,await e.env.DB.prepare("UPDATE milestones SET is_parent = 1 WHERE id = ?").bind(i).run())}const R=await e.env.DB.prepare(`
      INSERT INTO milestones (
        project_id, milestone_code, milestone_name, milestone_date, description, sequence_order,
        parent_milestone_id, milestone_level, milestone_path, is_parent
      )
      VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
    `).bind(r,s,n,a,o,c||0,i||null,m,_,j).run(),f=await e.env.DB.prepare("SELECT * FROM milestones WHERE id = ?").bind(R.meta.last_row_id).first();return e.json({success:!0,message:"Milestone created successfully",data:f},201)}catch(t){return console.error("Create milestone error:",t),e.json({success:!1,error:"Failed to create milestone"},500)}});Y.post("/bulk",v("admin","manager","user"),async e=>{try{const{project_id:t,milestones:r}=await e.req.json();if(!t||!Array.isArray(r)||r.length===0)return e.json({success:!1,error:"project_id and milestones array required"},400);const s=[];for(const n of r){const{milestone_code:a,milestone_name:o,milestone_date:c,description:i,sequence_order:l}=n;if(!(!a||!o))try{const u=await e.env.DB.prepare(`
          INSERT INTO milestones (project_id, milestone_code, milestone_name, milestone_date, description, sequence_order)
          VALUES (?, ?, ?, ?, ?, ?)
        `).bind(t,a,o,c,i,l||0).run();s.push(u.meta.last_row_id)}catch(u){console.error(`Failed to create milestone ${a}:`,u)}}return e.json({success:!0,message:`Created ${s.length} milestones`,data:{created_ids:s,count:s.length}},201)}catch(t){return console.error("Bulk create milestones error:",t),e.json({success:!1,error:"Failed to create milestones"},500)}});Y.put("/:id",v("admin","manager","user"),async e=>{try{const t=e.req.param("id"),r=await e.req.json();if(!await e.env.DB.prepare("SELECT id FROM milestones WHERE id = ?").bind(t).first())return e.json({success:!1,error:"Milestone not found"},404);const{milestone_code:n,milestone_name:a,milestone_date:o,description:c,sequence_order:i}=r;return await e.env.DB.prepare(`
      UPDATE milestones SET
        milestone_code = COALESCE(?, milestone_code),
        milestone_name = COALESCE(?, milestone_name),
        milestone_date = COALESCE(?, milestone_date),
        description = COALESCE(?, description),
        sequence_order = COALESCE(?, sequence_order),
        updated_at = CURRENT_TIMESTAMP
      WHERE id = ?
    `).bind(n,a,o,c,i,t).run(),e.json({success:!0,message:"Milestone updated successfully"})}catch(t){return console.error("Update milestone error:",t),e.json({success:!1,error:"Failed to update milestone"},500)}});Y.delete("/:id",v("admin","manager"),async e=>{try{const t=e.req.param("id"),r=await e.env.DB.prepare(`
      SELECT COUNT(*) as count FROM (
        SELECT id FROM cost_line_items WHERE milestone_id = ?
        UNION ALL
        SELECT id FROM material_costs WHERE milestone_id = ?
      )
    `).bind(t,t).first();return r&&r.count>0?e.json({success:!1,error:"Cannot delete milestone with associated cost items. Remove cost items first."},400):(await e.env.DB.prepare("DELETE FROM milestones WHERE id = ?").bind(t).run(),e.json({success:!0,message:"Milestone deleted successfully"}))}catch(t){return console.error("Delete milestone error:",t),e.json({success:!1,error:"Failed to delete milestone"},500)}});Y.get("/tree",async e=>{try{const t=e.req.query("project_id");if(!t)return e.json({success:!1,error:"project_id required"},400);const{results:r}=await e.env.DB.prepare("SELECT * FROM milestones WHERE project_id = ? ORDER BY milestone_path, sequence_order").bind(t).all(),s=(a,o=null)=>a.filter(c=>c.parent_milestone_id===o).map(c=>({...c,children:s(a,c.id)})),n=s(r);return e.json({success:!0,data:n})}catch(t){return console.error("Get milestone tree error:",t),e.json({success:!1,error:"Failed to fetch milestone tree"},500)}});const fe=new U;fe.use("*",W);fe.get("/",async e=>{try{const t=e.req.query("active")==="true";let r="SELECT * FROM rate_bands WHERE 1=1";const s=[];t&&(r+=" AND is_active = 1"),r+=" ORDER BY hourly_rate DESC";const{results:n}=await e.env.DB.prepare(r).bind(...s).all();return e.json({success:!0,data:n})}catch{return e.json({success:!1,error:"Failed to fetch rate bands"},500)}});fe.get("/:id",async e=>{try{const t=e.req.param("id"),r=await e.env.DB.prepare("SELECT * FROM rate_bands WHERE id = ?").bind(t).first();return r?e.json({success:!0,data:r}):e.json({success:!1,error:"Rate band not found"},404)}catch{return e.json({success:!1,error:"Failed to fetch rate band"},500)}});fe.post("/",v("admin","manager"),async e=>{try{const t=await e.req.json(),{band_name:r,band_level:s,role_description:n,hourly_rate:a}=t;if(!r||!a)return e.json({success:!1,error:"Required fields: band_name, hourly_rate"},400);if(await e.env.DB.prepare("SELECT id FROM rate_bands WHERE band_name = ?").bind(r).first())return e.json({success:!1,error:"Rate band with this name already exists"},400);const c=await e.env.DB.prepare(`
      INSERT INTO rate_bands (band_name, band_level, role_description, hourly_rate)
      VALUES (?, ?, ?, ?)
    `).bind(r,s,n,a).run();return e.json({success:!0,message:"Rate band created successfully",data:{id:c.meta.last_row_id}},201)}catch(t){return console.error("Create rate band error:",t),e.json({success:!1,error:"Failed to create rate band"},500)}});fe.put("/:id",v("admin","manager"),async e=>{try{const t=e.req.param("id"),r=await e.req.json();if(!await e.env.DB.prepare("SELECT id FROM rate_bands WHERE id = ?").bind(t).first())return e.json({success:!1,error:"Rate band not found"},404);const{band_name:n,band_level:a,role_description:o,hourly_rate:c,is_active:i}=r;return await e.env.DB.prepare(`
      UPDATE rate_bands SET
        band_name = COALESCE(?, band_name),
        band_level = COALESCE(?, band_level),
        role_description = COALESCE(?, role_description),
        hourly_rate = COALESCE(?, hourly_rate),
        is_active = COALESCE(?, is_active),
        updated_at = CURRENT_TIMESTAMP
      WHERE id = ?
    `).bind(n,a,o,c,i,t).run(),e.json({success:!0,message:"Rate band updated successfully"})}catch{return e.json({success:!1,error:"Failed to update rate band"},500)}});fe.delete("/:id",v("admin"),async e=>{try{const t=e.req.param("id"),r=await e.env.DB.prepare("SELECT COUNT(*) as count FROM cost_line_items WHERE rate_band_id = ?").bind(t).first();return r&&r.count>0?e.json({success:!1,error:"Cannot delete rate band that is in use. Set to inactive instead."},400):(await e.env.DB.prepare("DELETE FROM rate_bands WHERE id = ?").bind(t).run(),e.json({success:!0,message:"Rate band deleted successfully"}))}catch{return e.json({success:!1,error:"Failed to delete rate band"},500)}});const ae=new U;ae.use("/*",W);ae.get("/",async e=>{try{const t=e.req.query("active"),r=e.req.query("type"),s=e.req.query("search");let n="SELECT * FROM clients WHERE 1=1";const a=[];if(t==="true"&&(n+=" AND is_active = 1"),r&&(n+=" AND client_type = ?",a.push(r)),s){n+=" AND (client_name LIKE ? OR client_code LIKE ? OR primary_contact_name LIKE ?)";const i=`%${s}%`;a.push(i,i,i)}n+=" ORDER BY client_name ASC";const o=a.length>0?e.env.DB.prepare(n).bind(...a):e.env.DB.prepare(n),{results:c}=await o.all();return e.json({success:!0,data:c})}catch(t){return console.error("Get clients error:",t),e.json({success:!1,error:t.message||"Failed to fetch clients"},500)}});ae.get("/:id",async e=>{try{const t=e.req.param("id"),r=await e.env.DB.prepare("SELECT * FROM clients WHERE id = ?").bind(t).first();return r?e.json({success:!0,data:r}):e.json({success:!1,error:"Client not found"},404)}catch(t){return console.error("Get client error:",t),e.json({success:!1,error:t.message||"Failed to fetch client"},500)}});ae.get("/:id/projects",async e=>{try{const t=e.req.param("id");if(!await e.env.DB.prepare("SELECT id FROM clients WHERE id = ?").bind(t).first())return e.json({success:!1,error:"Client not found"},404);const{results:s}=await e.env.DB.prepare(`SELECT id, project_code, project_name, status, start_date, end_date, 
              total_cost, total_revenue, margin_percentage, approval_status
       FROM projects 
       WHERE client_id = ?
       ORDER BY created_at DESC`).bind(t).all(),n=s.reduce((c,i)=>c+(i.total_revenue||0),0),a=s.reduce((c,i)=>c+(i.total_cost||0),0),o=s.length>0?s.reduce((c,i)=>c+(i.margin_percentage||0),0)/s.length:0;return e.json({success:!0,data:{projects:s,summary:{total_projects:s.length,total_revenue:n,total_cost:a,average_margin:o}}})}catch(t){return console.error("Get client projects error:",t),e.json({success:!1,error:t.message||"Failed to fetch client projects"},500)}});ae.post("/",v("admin","manager"),async e=>{try{const t=await e.req.json(),r=e.get("user");if(!t.client_code||!t.client_name)return e.json({success:!1,error:"client_code and client_name are required"},400);if(await e.env.DB.prepare("SELECT id FROM clients WHERE client_code = ?").bind(t.client_code).first())return e.json({success:!1,error:"Client code already exists"},409);const n=await e.env.DB.prepare(`INSERT INTO clients (
        client_code, client_name, client_type, industry,
        primary_contact_name, primary_contact_email, primary_contact_phone,
        address_line1, address_line2, city, state, postal_code, country,
        tax_id, payment_terms, credit_limit, website, notes, is_active, created_by
      ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)`).bind(t.client_code,t.client_name,t.client_type||null,t.industry||null,t.primary_contact_name||null,t.primary_contact_email||null,t.primary_contact_phone||null,t.address_line1||null,t.address_line2||null,t.city||null,t.state||null,t.postal_code||null,t.country||"USA",t.tax_id||null,t.payment_terms||null,t.credit_limit||null,t.website||null,t.notes||null,t.is_active!==void 0?t.is_active:1,r.id).run(),a=await e.env.DB.prepare("SELECT * FROM clients WHERE id = ?").bind(n.meta.last_row_id).first();return e.json({success:!0,data:a},201)}catch(t){return console.error("Create client error:",t),e.json({success:!1,error:t.message||"Failed to create client"},500)}});ae.put("/:id",v("admin","manager"),async e=>{try{const t=e.req.param("id"),r=await e.req.json();if(!await e.env.DB.prepare("SELECT id FROM clients WHERE id = ?").bind(t).first())return e.json({success:!1,error:"Client not found"},404);await e.env.DB.prepare(`UPDATE clients SET
        client_code = ?,
        client_name = ?,
        client_type = ?,
        industry = ?,
        primary_contact_name = ?,
        primary_contact_email = ?,
        primary_contact_phone = ?,
        address_line1 = ?,
        address_line2 = ?,
        city = ?,
        state = ?,
        postal_code = ?,
        country = ?,
        tax_id = ?,
        payment_terms = ?,
        credit_limit = ?,
        website = ?,
        notes = ?,
        is_active = ?,
        updated_at = CURRENT_TIMESTAMP
      WHERE id = ?`).bind(r.client_code,r.client_name,r.client_type||null,r.industry||null,r.primary_contact_name||null,r.primary_contact_email||null,r.primary_contact_phone||null,r.address_line1||null,r.address_line2||null,r.city||null,r.state||null,r.postal_code||null,r.country||"USA",r.tax_id||null,r.payment_terms||null,r.credit_limit||null,r.website||null,r.notes||null,r.is_active!==void 0?r.is_active:1,t).run();const n=await e.env.DB.prepare("SELECT * FROM clients WHERE id = ?").bind(t).first();return e.json({success:!0,data:n})}catch(t){return console.error("Update client error:",t),e.json({success:!1,error:t.message||"Failed to update client"},500)}});ae.delete("/:id",v("admin"),async e=>{try{const t=e.req.param("id"),{results:r}=await e.env.DB.prepare("SELECT id FROM projects WHERE client_id = ?").bind(t).all();return r.length>0?e.json({success:!1,error:`Cannot delete client. ${r.length} project(s) are associated with this client.`},400):(await e.env.DB.prepare("DELETE FROM clients WHERE id = ?").bind(t).run(),e.json({success:!0,message:"Client deleted successfully"}))}catch(t){return console.error("Delete client error:",t),e.json({success:!1,error:t.message||"Failed to delete client"},500)}});const oe=new U;oe.use("/*",W);oe.get("/",async e=>{try{const t=e.req.query("active"),r=e.req.query("category"),s=e.req.query("search");let n="SELECT * FROM materials_master WHERE 1=1";const a=[];if(t==="true"&&(n+=" AND is_active = 1"),r&&(n+=" AND material_category = ?",a.push(r)),s){n+=" AND (material_name LIKE ? OR material_code LIKE ? OR description LIKE ?)";const i=`%${s}%`;a.push(i,i,i)}n+=" ORDER BY material_category, material_name ASC";const o=a.length>0?e.env.DB.prepare(n).bind(...a):e.env.DB.prepare(n),{results:c}=await o.all();return e.json({success:!0,data:c})}catch(t){return console.error("Get materials error:",t),e.json({success:!1,error:t.message||"Failed to fetch materials"},500)}});oe.get("/categories",async e=>{try{const{results:t}=await e.env.DB.prepare(`SELECT DISTINCT material_category 
       FROM materials_master 
       WHERE material_category IS NOT NULL 
       AND is_active = 1
       ORDER BY material_category`).all();return e.json({success:!0,data:t.map(r=>r.material_category)})}catch(t){return console.error("Get categories error:",t),e.json({success:!1,error:t.message||"Failed to fetch categories"},500)}});oe.get("/:id",async e=>{try{const t=e.req.param("id"),r=await e.env.DB.prepare("SELECT * FROM materials_master WHERE id = ?").bind(t).first();return r?e.json({success:!0,data:r}):e.json({success:!1,error:"Material not found"},404)}catch(t){return console.error("Get material error:",t),e.json({success:!1,error:t.message||"Failed to fetch material"},500)}});oe.post("/",v("admin","manager"),async e=>{try{const t=await e.req.json(),r=e.get("user");if(!t.material_code||!t.material_name||!t.default_unit_cost||!t.unit_of_measure)return e.json({success:!1,error:"material_code, material_name, default_unit_cost, and unit_of_measure are required"},400);if(await e.env.DB.prepare("SELECT id FROM materials_master WHERE material_code = ?").bind(t.material_code).first())return e.json({success:!1,error:"Material code already exists"},409);const n=await e.env.DB.prepare(`INSERT INTO materials_master (
        material_code, material_name, material_category, description,
        default_unit_cost, unit_of_measure, supplier_name, supplier_contact, supplier_email,
        default_cost_type, default_frequency, lead_time_days, is_active, created_by
      ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)`).bind(t.material_code,t.material_name,t.material_category||null,t.description||null,t.default_unit_cost,t.unit_of_measure,t.supplier_name||null,t.supplier_contact||null,t.supplier_email||null,t.default_cost_type||"one-time",t.default_frequency||null,t.lead_time_days||null,t.is_active!==void 0?t.is_active:1,r.id).run(),a=await e.env.DB.prepare("SELECT * FROM materials_master WHERE id = ?").bind(n.meta.last_row_id).first();return e.json({success:!0,data:a},201)}catch(t){return console.error("Create material error:",t),e.json({success:!1,error:t.message||"Failed to create material"},500)}});oe.put("/:id",v("admin","manager"),async e=>{try{const t=e.req.param("id"),r=await e.req.json();if(!await e.env.DB.prepare("SELECT id FROM materials_master WHERE id = ?").bind(t).first())return e.json({success:!1,error:"Material not found"},404);await e.env.DB.prepare(`UPDATE materials_master SET
        material_code = ?,
        material_name = ?,
        material_category = ?,
        description = ?,
        default_unit_cost = ?,
        unit_of_measure = ?,
        supplier_name = ?,
        supplier_contact = ?,
        supplier_email = ?,
        default_cost_type = ?,
        default_frequency = ?,
        lead_time_days = ?,
        is_active = ?,
        updated_at = CURRENT_TIMESTAMP
      WHERE id = ?`).bind(r.material_code,r.material_name,r.material_category||null,r.description||null,r.default_unit_cost,r.unit_of_measure,r.supplier_name||null,r.supplier_contact||null,r.supplier_email||null,r.default_cost_type||"one-time",r.default_frequency||null,r.lead_time_days||null,r.is_active!==void 0?r.is_active:1,t).run();const n=await e.env.DB.prepare("SELECT * FROM materials_master WHERE id = ?").bind(t).first();return e.json({success:!0,data:n})}catch(t){return console.error("Update material error:",t),e.json({success:!1,error:t.message||"Failed to update material"},500)}});oe.delete("/:id",v("admin"),async e=>{try{const t=e.req.param("id"),{results:r}=await e.env.DB.prepare("SELECT id FROM material_costs WHERE material_master_id = ?").bind(t).all();return r.length>0?e.json({success:!1,error:`Cannot delete material. It is used in ${r.length} cost item(s).`},400):(await e.env.DB.prepare("DELETE FROM materials_master WHERE id = ?").bind(t).run(),e.json({success:!0,message:"Material deleted successfully"}))}catch(t){return console.error("Delete material error:",t),e.json({success:!1,error:t.message||"Failed to delete material"},500)}});const A=new U;A.use("/api/*",_r());A.use("/static/*",Rr({root:"./public"}));A.route("/api/auth",Fe);A.route("/api/projects",M);A.route("/api/personnel",me);A.route("/api/costs",$);A.route("/api/integrations",J);A.route("/api/milestones",Y);A.route("/api/rate-bands",fe);A.route("/api/clients",ae);A.route("/api/materials-master",oe);A.get("/api/health",e=>e.json({status:"ok",timestamp:new Date().toISOString()}));A.get("/",e=>e.html(`
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>BTL Costing Application</title>
        <script src="https://cdn.tailwindcss.com"><\/script>
        <link href="https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6.4.0/css/all.min.css" rel="stylesheet">
        <style>
          body { font-family: 'Inter', system-ui, -apple-system, sans-serif; }
          .sidebar { min-height: 100vh; }
          .card { background: white; border-radius: 0.5rem; box-shadow: 0 1px 3px rgba(0,0,0,0.1); }
        </style>
    </head>
    <body class="bg-gray-50">
        <div id="app">
            <!-- React-like SPA will be loaded here -->
            <div class="flex items-center justify-center min-h-screen">
                <div class="text-center">
                    <i class="fas fa-spinner fa-spin text-4xl text-blue-600 mb-4"></i>
                    <p class="text-gray-600">Loading BTL Costing Application...</p>
                </div>
            </div>
        </div>
        
        <script src="https://cdn.jsdelivr.net/npm/axios@1.6.0/dist/axios.min.js"><\/script>
        <script src="/static/app.js"><\/script>
        <script src="/static/wizard.js"><\/script>
        <script src="/static/wizard-helpers.js"><\/script>
    </body>
    </html>
  `));A.notFound(e=>e.json({success:!1,error:"Not found"},404));A.onError((e,t)=>(console.error("Application error:",e),t.json({success:!1,error:"Internal server error"},500)));const rt=new U,Sr=Object.assign({"/src/index.tsx":A});let Lt=!1;for(const[,e]of Object.entries(Sr))e&&(rt.all("*",t=>{let r;try{r=t.executionCtx}catch{}return e.fetch(t.req.raw,t.env,r)}),rt.notFound(t=>{let r;try{r=t.executionCtx}catch{}return e.fetch(t.req.raw,t.env,r)}),Lt=!0);if(!Lt)throw new Error("Can't import modules from ['/src/index.ts','/src/index.tsx','/app/server.ts']");export{rt as default};
